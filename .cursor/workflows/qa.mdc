---
description: 
globs: 
alwaysApply: false
---
---
description:
globs:
alwaysApply: true
---

# GitHub PR 代码审查任务指南

请使用中文完成以下 GitHub PR 代码审查任务。这是一个分步骤的引导式任务，请在每一步完成后确认，然后再进行下一步。

## 任务 1: 准备环境

1. 请执行以下命令切换到目标 PR 分支：
   ```bash
   gh pr checkout <PR编号>
   ```

2. 请确认是否成功切换到 PR 分支？如果成功，请回复"已切换到 PR 分支"，并提供当前分支名称。

## 任务 2: 筛选需要审查的文件

1. 请执行以下命令获取变更文件列表：
   ```bash
   git diff --name-only origin/dev...HEAD | grep -v "/graphql/"
   ```
   
   这个命令会列出所有变更的文件，同时排除 `/graphql/` 目录下的自动生成文件。

2. 请确认是否已获取筛选后的文件列表？如果成功，请回复"已获取筛选后的文件列表"，并列出需要审查的文件。

## 任务 3: 逐个文件查看详细变更

1. 对于每个需要审查的文件，请执行以下命令查看详细变更：
   ```bash
   # 对于每个文件
   git diff origin/dev...HEAD -- <文件路径> | cat
   
   # 如果是新增文件，查看完整内容
   cat <文件路径>
   ```

2. 请确认是否已查看所有文件的详细变更？如果已完成，请回复"已查看所有文件的详细变更"，并简要描述最重要的几处代码变更。

## 任务 4: 查看审查规则

1. 请查看项目中的审查规则文件：
   ```bash
   cat ./cursor/rules/qa.mdc
   cat ./cursor/rules/review.mdc
   ```

2. 请确认是否已查看审查规则？如果已查看，请回复"已查看审查规则"，并简要概括规则的主要内容。

## 任务 5: 进行代码审查

根据前面获取的代码变更和审查规则，请对每个文件进行审查，重点关注：

1. 代码质量和最佳实践
2. 功能实现的正确性
3. 性能优化空间
4. 安全性问题
5. 代码可维护性

对于每个文件，请提供以下格式的审查报告：

```markdown
### 文件: [文件路径]

**变更概述:**
[详细描述添加、修改或删除的代码内容]

**文件功能:**
[简述该文件的功能和在项目中的作用]

**符合规范的方面:**
[列出符合项目规范和最佳实践的方面]

**发现的问题:**
[列出发现的问题，如有]

**改进建议:**
[提供具体的改进建议，包括代码示例]
```

请确认是否理解审查任务？如果理解，请回复"已理解审查任务"，并开始进行审查。

## 任务 6: 生成综合审查报告

1. 将所有文件的审查意见整合为一份完整的 Markdown 格式报告
2. 在报告末尾添加总结性评价和建议
3. 报告应包含：
   - 审查概述（PR 的主要目的和变更范围）
   - 各文件的详细审查意见
   - 跨文件的问题和建议
   - 总体评价和改进方向

请确认是否已完成综合审查报告？如果已完成，请回复"已完成审查报告"，并提供完整的审查报告内容。

## 任务 7: 保存审查报告

请将生成的审查报告保存为项目根目录下的 `review.md` 文件：

```bash
cat > review.md << 'EOF'
# PR 代码审查报告

[在此处粘贴完整的审查报告内容]
EOF
```

请确认是否已保存审查报告？如果已保存，请回复"已保存审查报告"，任务完成。

---

请按照上述步骤逐一执行，每完成一步后确认并等待下一步指示。这种分步骤的方式可以确保审查过程的完整性和准确性。