---
description: 
globs: 
alwaysApply: false
---

# GitHub PR 代码审查工作流与规范

本文件既定义了 GitHub Pull Request (PR) 代码审查需要遵循的规范和标准，也提供了启动和执行审查流程的指引。

## 文件审查报告格式

对于每个被审查的文件，请使用以下 Markdown 格式记录审查意见：

```markdown
### 文件: [文件路径]

**变更概述:**
[详细描述该文件中添加、修改或删除的代码内容，以及变更的目的]

**文件功能:**
[简述该文件在项目中的主要功能和作用]

**发现的问题:**
[编号列出审查过程中发现的具体问题、潜在风险或不符合规范之处]
1. 问题描述...
2. 问题描述...

**改进建议:**
[针对发现的问题，提供具体的、可操作的改进建议，可附带代码示例]
1. 针对问题 1 的建议...
2. 针对问题 2 的建议...
```

## 综合审查报告结构

最终的综合审查报告应包含以下部分：

1.  **审查概述:**
    *   PR 的编号和链接。
    *   PR 的主要目的和解决的问题。
    *   本次审查的范围（涉及的主要文件或模块）。
2.  **各文件详细审查意见:**
    *   按文件逐一列出上述格式的审查报告。
3.  **跨文件问题和建议:**
    *   是否存在影响多个文件或模块的共性问题？
    *   是否有适用于整个 PR 或项目的架构性建议？
4.  **总体评价和结论:**
    *   对本次 PR 的整体质量给出评价（例如：批准、需要修改、拒绝）。
    *   总结主要的改进方向或后续需要关注的事项。

## 审查流程引导

具体的审查执行步骤已分解为 Story 文件。流程概览如下：

# 不能跳步骤，必须严格按照这个步骤跑！

1.  `.cursor/stories/01-prepare-environment.story` - 准备环境
2.  `.cursor/stories/02-filter-files.story` - 筛选文件
3.  `.cursor/stories/03-review-changes.story` - 查看变更
4.  `.cursor/stories/04-consult-rules.story` - 阅读审查规则
5.  `.cursor/stories/05-perform-review.story` - 执行审查 (应用本文件定义的关注点和报告格式)
6.  `.cursor/stories/06-perform-review-test-case.story` - 执行审查 (应用本文件定义的关注点和报告格式)
7.  `.cursor/stories/07-compile-report.story` - 生成报告 (遵循本文件定义的报告结构)
8.  `.cursor/stories/08-save-report.story` - 保存报告

---

**🚀 执行指令 🚀**

**当用户请求进行 QA 代码审查时 (例如: "qa review #PR号")，请立即开始执行 `./stories/01-prepare-environment.story` 中的任务, 并按照上述 Story 文件的数字顺序逐步推进整个审查流程。**

**在执行过程中，请直接应用本文件中定义的"审查关注点"、"文件审查报告格式"和"综合审查报告结构"作为规范依据。** 